Imports System.Threading

Module ПК_Окончание

    Dim SC As SynchronizationContext

    Sub ПК_Окончание_уд(ЧекнутыеСлушатели As Object, ВидПриказа As Object)

        Dim ПриложениеВорд
        Dim ДокументВорд, ДанныеСлушателей
        Dim Область
        Dim ПутьККаталогуСРесурсами, ПутьКШаблону
        Dim счетчикТаблиц As Integer
        Dim СтрокаЗапроса As String
        Dim СписокВыпущенных, parametrs

        ReDim parametrs(2)

        If ЧекнутыеСлушатели(0, 0) = "нет записей" Then
            предупреждение.текст.Text = "Укажите галочками слушателей без удостоверения"
            предупреждение.ShowDialog()
            Exit Sub
        End If

        SC = SynchronizationContext.Current
        Dim ВторойПоток As Thread

        СтрокаЗапроса = "SELECT Слушатель.Фамилия+' '+ Слушатель.Имя+' '+IFNULL(слушатель.Отчество,' '),Слушатель.Фамилия,Слушатель.Имя+' '+IFNULL(слушатель.Отчество,' '),Слушатель.Снилс,`group`.НомерУд, `group`.РегНомерУд,`group`.ОсновнойДокумент,Программа , ДатаВыдачиУд, ДатаНЗ, ДатаКЗ, КолЧас FROM (group_list INNER JOIN Слушатель ON group_list.Слушатель = Слушатель.Снилс) INNER JOIN 
ON group_list.Kod = `group`.Код WHERE `group`.Код = " & ААОсновная.prikazKodGroup & " ORDER BY Слушатель.Фамилия"


        ДанныеСлушателей = ЗагрузитьИзБазы.ЗагрузитьИзБазы(СтрокаЗапроса)

        If ДанныеСлушателей(0, 0) = "нет записей" Then
            предупреждение.текст.Text = "Нет данных для отображения"
            предупреждение.ShowDialog()
            Exit Sub
        End If

        If Not ДанныеСлушателей(6, 0) = "Удостоверение" Then
            предупреждение.текст.Text = "Основной документ группы " & ДанныеСлушателей(6, 0)
            предупреждение.ShowDialog()
            Exit Sub
        End If

        СписокВыпущенных = Вспомогательный.УбратьНенужныеСтрокиИзМассива(ДанныеСлушателей, ЧекнутыеСлушатели)

        parametrs(0) = СписокВыпущенных
        parametrs(1) = ААОсновная.prikazKodGroup

        ВторойПоток = New Thread(AddressOf ПрисвоитьНомера)
        ВторойПоток.IsBackground = True
        ВторойПоток.Start(parametrs)

        ПутьККаталогуСРесурсами = Запуск.ПутьКФайлуRes
        ПутьКШаблону = ПутьККаталогуСРесурсами & "Шаблоны\ПК_Окончание\ПК_Окончание_уд.docx"

        ПриложениеВорд = CreateObject("Word.Application")


        ДокументВорд = ПриложениеВорд.Documents.Open(ПутьКШаблону, ReadOnly:=True)

        Вспомогательный.savePrikazBlank(ДокументВорд, ААОсновная.prikazKodGroup, ВидПриказа, ПутьККаталогуСРесурсами, "Приказы")

        If ВидПриказа = "ПК_Зачисление" Then
            МСВорд.ДобавитьСписокПоМеткеСтрокой(ДокументВорд, "$СписокСлушателей$", ЧекнутыеСлушатели, ПриложениеВорд)
        Else
            МСВорд.ДобавитьСписокПоМеткеСтрокой(ДокументВорд, "$СписокСлушателей$", СписокВыпущенных, ПриложениеВорд)
        End If

        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ДатаПриказа$", АСформироватьПриказ.ДатаПриказа.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$НомерГруппы$", АСформироватьПриказ.НомерГруппы.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$Программа$", СписокВыпущенных(7, 0), 2)


        ТаблицаУтверждаю(ПриложениеВорд, ДокументВорд, "$ТаблицаУтверждаю$", "$КонецОсновногоРаздела$")

        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ТаблицаУтверждаю$", АСформироватьПриказ.УтверждаетДолжность.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$УтверждаюИО$", АСформироватьПриказ.Утверждает.Text)

        СкопироватьТаблицуИзШаблона(ПриложениеВорд, ДокументВорд, ПутьККаталогуСРесурсами & "Шаблоны\ПК_Окончание\ТаблицаСогласование.docx", 1)

        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ВноситДолжность$", АСформироватьПриказ.ПроектВноситДолжность.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ИОФамилияВносит$", перевернуть(АСформироватьПриказ.ПроектВносит.Text))
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ИсполнительДолжность$", АСформироватьПриказ.ИсполнительДолжность.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ИОФамилияИсполнитель$", перевернуть(АСформироватьПриказ.Исполнитель.Text))
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$Согласовано1Должность$", АСформироватьПриказ.Согласовано1Должность.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ИОФамилияСогласовано1$", перевернуть(АСформироватьПриказ.Согласовано1.Text))
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$Согласовано2Должность$", АСформироватьПриказ.Согласовано2Должность.Text)
        Вспомогательный.ЗаменитьТекстВДокументеВорд(ДокументВорд.Range, "$ИОФамилияСогласовано2$", перевернуть(АСформироватьПриказ.Согласовано2.Text))



        ДокументВорд.Bookmarks("\EndOfDoc").Range.InsertBreak(2)

        ДокументВорд.Bookmarks("\EndOfDoc").Range.PageSetup.Orientation = 1

        СкопироватьТаблицуИзШаблона(ПриложениеВорд, ДокументВорд, ПутьККаталогуСРесурсами & "Шаблоны\ПК_Окончание\ПК_Окончание_ТаблицаУдостоверение.docx", 1)
        ДокументВорд.Bookmarks("\EndOfDoc").Range.InsertBreak(2)

        счетчикТаблиц = ДокументВорд.Tables.Count

        Область = ДокументВорд.Tables(счетчикТаблиц).Range
        Область.SetRange(Start:=Область.Start,
        End:=ДокументВорд.Bookmarks("\EndOfDoc").Range.End)


        For СчетчикСлушателей = 1 To UBound(СписокВыпущенных, 2)
            Область.Copy
            ДокументВорд.Bookmarks("\EndOfDoc").Range.Paste
        Next

        For СчетчикСлушателей = 0 To UBound(СписокВыпущенных, 2)
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$Фамилия$", СписокВыпущенных(1, СчетчикСлушателей))
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$ИмяИОтчество$", СписокВыпущенных(2, СчетчикСлушателей))
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$ДНачало$", СписокВыпущенных(9, СчетчикСлушателей))
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$ДКонец$", СписокВыпущенных(10, СчетчикСлушателей))
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$Программа$", СписокВыпущенных(8, СчетчикСлушателей))
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$Часы$", СписокВыпущенных(11, СчетчикСлушателей))
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$Номер$", СписокВыпущенных(4, СчетчикСлушателей) + СчетчикСлушателей)
            Вспомогательный.ЗаменитьТекстВОбластиДокументаВорд(ДокументВорд.Tables(счетчикТаблиц + СчетчикСлушателей).Range, "$ДатаВ$", АСформироватьПриказ.ДатаПриказа.Value.ToShortDateString)
        Next

        ПриложениеВорд.Visible = True
        ДокументВорд.Save



    End Sub

    Sub ПрисвоитьНомера(parametrs As Object)
        Dim массивЗапросов, Группа
        Dim Счетчик As Integer, Число
        Dim строкаЗапроса As String
        Dim kodGroup As Integer

        Группа = parametrs(0)
        kodGroup = parametrs(1)

        ReDim массивЗапросов(UBound(Группа, 2))
        Счетчик = 0
        Try
            Число = Группа(4, 0) + 1
        Catch ex As Exception
            предупреждение.текст.Text = "Номер удостоверения группы не задан или не является числом"
            предупреждение.ShowDialog()

        End Try

        Try
            Число = Группа(5, 0) + 1
        Catch ex As Exception
            предупреждение.текст.Text = "Регистрационный номер удостоверения группы не задан или не является числом"
            предупреждение.ShowDialog()

        End Try

        While Счетчик <= UBound(Группа, 2)
            Число = UBound(Группа, 2)
            строкаЗапроса = updateNumbersInGroup(Группа(4, 0) + Счетчик, Группа(5, 0) + Счетчик, kodGroup, Группа(1, Счетчик))
            ЗаписьВБазу.ЗаписьВБазу(строкаЗапроса)
            массивЗапросов(Счетчик) = строкаЗапроса
            Счетчик = Счетчик + 1
        End While

    End Sub

End Module
