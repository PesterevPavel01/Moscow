<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sortDown.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAeJJREFUWEftmN9tgzAQxnmIIY95bBVAjNANmhE6QbhM0GyQbJCRGKEjZARGSH32
        3SkE4pryx1GUn/RJBH+++wStJS5iUlhuMkiqvFR1VsaXUEpBVflOlRTLkkN87DKHVAqLowmXgQK5uV0c
        VhCtzEIAsPcakv1VyI0OmFQ2nPomX3D0Gz2YTKWqIk4b8sndUugsNpeqJSCtPQyS6ykCsmcqUZsGsuYy
        MeyZStSmgay5TAx7phK1aSBrLlNIXgGH0isge8YSlXUiXp9N7BlLVNaJeH02sWcsUVkn4u2zaU5eAYfS
        KyB7hohKeSP7fAqwZ4iolDeyz6cAe4aISnkj+/5bYGqCBUz19waKft7luQKyp49oa4tXQF/RVsMa1Add
        tgIWsOr83JU6XQXHJiuTKge1x+vrgHjPfJx3MGtAM5jSH+H4JDlgAcsC+75D/EW2BrMGRHTAU17G5wzU
        CQPiNc6CaLlFr4DscYmsTnSoH3ySNOI70+1OpK5PA/a4RFYnbxAVNpyq8ZpudyJ1fRqwxyWy/gmO19a3
        A8oOpG7fBnMhuXjk+5jjN/MEaYAJ9/+j5gbPR5MJz0h7Rtm0uHDvZJ8D7H09L5e/1XxrR66PpNYZqU95
        4NcdTqrG15ruFp82VRT9AhtfYjMZO5RiAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="sortUp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAdhJREFUWEftmOFtwjAQhfMTKYnECIzQDdoR+EkAqWzQbkA3YCSP0BEYISO0d867
        U0pP5mgSDBWf9ISxn89PMRjhQthW1cumqgK9tvT6lVFhU5aviNVBoT4MY1atKVMMt67rXa9zv5zP53Eg
        A7w2Pb13ybOiXS2oEWK4snyDLzu0o3uEDBwwpt1lfHKncBbkajUgxm4GzeUNyJ/Vhj4feHsWqZsSrCbq
        8ZjpkS9w/LS72WyB7iRSNyVYTdTjMtf1kTwxIOkT3UmkbkqwmqjnnJnPSPqGH/kIIt+BtprDHjA8GZpL
        GwZNXS95bEXbygGjyvKJ+tp4Rk2I5tKGAfUHOR8lYOzvDtPA7anQXNow6P+q9AMy/CTRjEidS4SpJurx
        mJnTgKdInUuEqSbq8ZiZuw84Nv8v4LUZHFDmDRFKmajHY7aQeUOEUibq8ZgtZN4QoZSJejzmHDwCDuVP
        AcU7llDWRD0esyDesYSyJurxmAXxjiWUNVGPx5yDR8ChuALK2FTCMibqSZllbCphGRP1pMwyNpWwjIl6
        POYc3FXAeOV7o9dvMWB3gXnF/xvn6N2yBrk8j2n5ei3nk+S1f9yXy2V678r1ZvRrR3GZHrc7o/j7EJqq
        eu5SFcU3diU/OtEUBUsAAAAASUVORK5CYII=
</value>
  </data>
</root>